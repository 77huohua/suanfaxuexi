/*
设n=11111001
先与
    01010101 c1
取与
    01010001 x1
然后
    11111001 >>1
得
    01111100 x2
与
    01010101 c1取与
得
    01010100 x3

    x1+x3
得
    10100101 x4相对与n来说长度信息变成了2
    如
    n 1 1 1 1 1 0 0 1 每一位为1时证明这一位上有1
    然后x4
      10 10 01 01 没两位证明n对应的两位有多少个0(2进制表示)

    同理继续迁移到4 8 16 32 得解
*/

/*
返回n的二进制中有几个1
两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目
给你两个整数x和y,计算并返回它们之间的汉明距离
*/

int cntOnes(int n);
int hammingDistance(int x, int y);

int cntOnes(int n)
{
    n = (n & 0x55555555) + ((n >> 1) & 0x55555555);
    n = (n & 0x33333333) + ((n >> 2) & 0x33333333);
    n = (n & 0x0f0f0f0f) + ((n >> 4) & 0x0f0f0f0f);
    n = (n & 0x00ff00ff) + ((n >> 8) & 0x00ff00ff);
    n = (n & 0x0000ffff) + ((n >> 16) & 0x0000ffff);
    return n;
}

int hammingDistance(int x,int y)
{
    return cntOnes(x ^ y);
}